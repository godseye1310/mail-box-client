{"version":3,"file":"static/js/82.8e0c8655.chunk.js","mappings":"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","sources":["components/UI/MessageInput.jsx","components/Mail/EmailForm.jsx","pages/MailPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nconst MessageInput = ({ editorState, onEditorStateChange }) => {\r\n\treturn (\r\n\t\t<Editor\r\n\t\t\teditorState={editorState}\r\n\t\t\tonEditorStateChange={onEditorStateChange}\r\n\t\t\twrapperClassName=\"flex flex-col-reverse\"\r\n\t\t\teditorClassName=\"editor\"\r\n\t\t\ttoolbarClassName=\"toolbar bg-gray-500\"\r\n\t\t\tplaceholder=\"Write your message here...\"\r\n\t\t\ttoolbar={{\r\n\t\t\t\toptions: [\"inline\", \"list\", \"history\"],\r\n\t\t\t\tinline: {\r\n\t\t\t\t\toptions: [\"bold\", \"italic\", \"underline\"],\r\n\t\t\t\t\tbold: {\r\n\t\t\t\t\t\tclassName: \"custom-bold\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\titalic: {\r\n\t\t\t\t\t\tclassName: \"custom-italic\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tlist: {\r\n\t\t\t\t\toptions: [\"unordered\", \"ordered\"],\r\n\t\t\t\t},\r\n\t\t\t\thistory: {\r\n\t\t\t\t\toptions: [\"undo\", \"redo\"],\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default MessageInput;\r\n","import React, { useState } from \"react\";\r\nimport useAuth from \"../../store/auth-context\";\r\nimport useMailbox from \"../../store/mailbox-context\";\r\nimport { EditorState } from \"draft-js\";\r\nimport { convertToHTML } from \"draft-convert\";\r\n\r\nimport MessageInput from \"../UI/MessageInput\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\n\r\nconst RTDB_URL = `https://mail-box-client-38ab9-default-rtdb.asia-southeast1.firebasedatabase.app`;\r\n\r\nconst EmailForm = () => {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [subject, setSubject] = useState(\"\");\r\n\tconst [messageEditorState, setMessageEditorState] = useState(\r\n\t\tEditorState.createEmpty()\r\n\t);\r\n\tconst { userEmail } = useAuth(); // Getting the email of the logged-in user (sender's email)\r\n\tconst { addSentMail } = useMailbox();\r\n\r\n\t// Clean the email address for use in the Firebase path\r\n\tconst cleanEmail = email.replace(/[@.]/g, \"_\"); // Replacing @ and . with underscores\r\n\tconst cleanUserEmail = userEmail.replace(/[@.]/g, \"_\"); // Cleaning sender's email\r\n\r\n\t// Use the useFetch hook to send the email\r\n\tconst { fetchData: sendReceiverEmail } = useFetch(\r\n\t\t`${RTDB_URL}/users/${cleanEmail}/Inbox.json`,\r\n\t\t\"POST\"\r\n\t);\r\n\tconst { fetchData: sendSenderMailRef } = useFetch(\r\n\t\t`${RTDB_URL}/users/${cleanUserEmail}/SentBox.json`,\r\n\t\t\"POST\"\r\n\t);\r\n\r\n\tconst sendEmailHandler = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\t// Get the message content in plain text format\r\n\t\tconst messageContent = convertToHTML(\r\n\t\t\tmessageEditorState.getCurrentContent()\r\n\t\t);\r\n\t\t// Create the email data object\r\n\t\tconst emailData = {\r\n\t\t\tto: email,\r\n\t\t\tfrom: userEmail,\r\n\t\t\tsubject: subject,\r\n\t\t\tmessage: messageContent,\r\n\t\t\ttimestamp: new Date().toISOString(),\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\t// Store in the receiver's Inbox\r\n\t\t\tconst receiverResponseData = await sendReceiverEmail(emailData);\r\n\t\t\tconst emailId = receiverResponseData.name; // Use Firebase response ID\r\n\r\n\t\t\tconsole.log(\"sending Mail\");\r\n\r\n\t\t\t// Store in the sender's SentBox\r\n\t\t\tconst senderResponseData = await sendSenderMailRef({\r\n\t\t\t\t...emailData,\r\n\t\t\t\temailId, // Optionally store the emailId for reference\r\n\t\t\t});\r\n\t\t\tconst id = senderResponseData.name;\r\n\t\t\taddSentMail({ ...emailData, id, emailId });\r\n\r\n\t\t\tconsole.log(\"sending mail successfully\", emailId);\r\n\r\n\t\t\t// Reset form fields after successful email send\r\n\t\t\tsetEmail(\"\");\r\n\t\t\tsetSubject(\"\");\r\n\t\t\tsetMessageEditorState(EditorState.createEmpty());\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(\"Error sending email:\", error);\r\n\t\t\t// Handle error (show notification, etc.)\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"min-h-full w-full px-3 bg-gray-100 flex justify-center items-start pt-12 pb-3\">\r\n\t\t\t<form\r\n\t\t\t\tonSubmit={sendEmailHandler}\r\n\t\t\t\tclassName=\"w-full max-w-6xl min-h-[80dvh] bg-white shadow-md rounded-lg p-6\"\r\n\t\t\t>\r\n\t\t\t\t{/* To Field */}\r\n\t\t\t\t<div className=\"mb-4 relative\">\r\n\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-500\">\r\n\t\t\t\t\t\tTo{\" \"}\r\n\t\t\t\t\t\t<span className=\"absolute right-0 text-slate-400 \">\r\n\t\t\t\t\t\t\tCc/Bcc\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tclassName=\"mt-1 block w-full py-2 border-b border-b-gray-300 focus-visible:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"Recipient's Email\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Subject Field */}\r\n\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700\"></label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tclassName=\"mt-1 block w-full py-2 border-b border-b-gray-300 focus-visible:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\r\n\t\t\t\t\t\tvalue={subject}\r\n\t\t\t\t\t\tonChange={(e) => setSubject(e.target.value)}\r\n\t\t\t\t\t\tplaceholder=\"Subject\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Message Body */}\r\n\t\t\t\t<div className=\"mb-4 relative h-full\">\r\n\t\t\t\t\t<label className=\"block text-sm font-medium text-gray-700\"></label>\r\n\t\t\t\t\t{/* Editor Text Area */}\r\n\t\t\t\t\t<div className=\"flex flex-col h-full focus-within:border-indigo-500\">\r\n\t\t\t\t\t\t<MessageInput\r\n\t\t\t\t\t\t\teditorState={messageEditorState}\r\n\t\t\t\t\t\t\tonEditorStateChange={setMessageEditorState}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* Send Button */}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"bg-blue-500 absolute bottom-1 justify-self-start justify-items-start text-white px-8 py-1.5 rounded-lg hover:bg-blue-600\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSend\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EmailForm;\r\n","import React from \"react\";\r\nimport EmailForm from \"../components/Mail/EmailForm\";\r\n\r\nconst MailPage = () => {\r\n\treturn (\r\n\t\t<div className=\"w-full h-full\">\r\n\t\t\t<EmailForm />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MailPage;\r\n"],"names":["_ref","editorState","onEditorStateChange","_jsx","Editor","wrapperClassName","editorClassName","toolbarClassName","placeholder","toolbar","options","inline","bold","className","italic","list","history","RTDB_URL","EmailForm","email","setEmail","useState","subject","setSubject","messageEditorState","setMessageEditorState","EditorState","createEmpty","userEmail","useAuth","addSentMail","useMailbox","cleanEmail","replace","cleanUserEmail","fetchData","sendReceiverEmail","useFetch","sendSenderMailRef","children","_jsxs","onSubmit","async","event","preventDefault","messageContent","convertToHTML","getCurrentContent","emailData","to","from","message","timestamp","Date","toISOString","emailId","name","console","log","id","error","type","required","value","onChange","e","target","MessageInput","MailPage"],"sourceRoot":""}